<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <ControlTemplate x:Key="RounderListBoxTemplate" TargetType="ListBox">

        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            CornerRadius="10">

            <ItemsPresenter />

        </Border>
    </ControlTemplate>


    <ControlTemplate x:Key="RounderButtonTemplate" TargetType="Button">

        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="3"
            CornerRadius="90">

            <ContentPresenter
                x:Name="contentPresenter"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />


        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="White" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Background" Value="Gray" />
                <Setter TargetName="border" Property="BorderBrush" Value="Gray" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="Gray" />
            </Trigger>

            <EventTrigger RoutedEvent="MouseEnter">

                <EventTrigger.Actions>
                    <BeginStoryboard>

                        <Storyboard>

                            <!--<DoubleAnimation
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty="Width"
                                From="10"
                                To="200"
                                Duration="0:0:2" />-->


                            <ColorAnimation
                                AutoReverse="True"
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="border"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="Yellow"
                                Duration="0:0:0.500" />
                        </Storyboard>



                    </BeginStoryboard>



                </EventTrigger.Actions>

            </EventTrigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>



    <ControlTemplate x:Key="ButtonTemplate1" TargetType="{x:Type Button}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="3"
            CornerRadius="90">
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="{TemplateBinding Foreground}"
                    Text="Hello" />
            </Grid>
        </Border>
    </ControlTemplate>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />


    <ControlTemplate x:Key="ButtonTemplate2" TargetType="{x:Type ButtonBase}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">

            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Focusable="False"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="validationErrorTemplate">
        <StackPanel>
            <AdornedElementPlaceholder x:Name="textBox" />
            <ItemsControl ItemsSource="{Binding}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Foreground="Red" Text="{Binding ErrorContent}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </ControlTemplate>

    <!--  Zmieniamy tylko fragment stylu  -->
    <!--<Style TargetType="TextBox">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationErrorTemplate}" />
    </Style>-->

</ResourceDictionary>